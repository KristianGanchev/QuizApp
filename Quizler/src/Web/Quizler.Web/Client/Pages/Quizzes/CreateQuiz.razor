@page "/quizzes/create"

@using Quizler.Web.Shared.Models.Categories
@using Quizler.Web.Shared.Models.Quizzes

@if (categories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="model" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="Name">Quiz name</label>
            <InputText class="form-control" @bind-Value="model.Name" placeholder="Give your quiz a name" />
        </div>
        <div class="form-group">
            <label for="Name">Select your category</label>
            <InputSelectNumber @bind-Value="model.CategorieId" id="categoryName" class="form-control">
                <option value="0" disabled>Select a category</option>
                @foreach (var categorie in categories)
                    {
                    <option value="@categorie.Id">@categorie.Name</option>
                    }
                /**/

            </InputSelectNumber>
        </div>
        <button type="submit" class="btn btn-primary">Create quiz</button>
    </EditForm>
}

@code {
    private CategorieResponse[] categories;
    readonly QuizCreateRequest model = new QuizCreateRequest();
    QuizResponse response;



    protected override async Task OnInitializedAsync()
    {
        categories = await this.HttpClient.GetJsonAsync<CategorieResponse[]>("categories/getall");
    }

    async Task Submit()
    {
        model.User = await this.storage.GetItemAsync<string>("userName");

        this.response = await this.HttpClient.PostJsonAsync<QuizResponse>("quizzes/create", model);

        if (response != null)
        {
            this.Navigation.NavigateTo($"quizzes/edit/{this.response.Id}/{this.response.Name}");
        }
    }
}
