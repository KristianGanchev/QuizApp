@using Quizler.Web.Shared.Models.Quizzes
@using Quizler.Web.Shared.Models.Questions
@using Quizler.Web.Shared.Models.Answers
@using Quizler.Web.Shared.Models.Results

@page "/quizzes/game/{QuizId:int}"

@if (this.Questions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">


        <h1 class="text-center"><strong>Question: @(currentPage+1) / @(this.Questions.Length + 1) @this.CurrentQuestion.Text</strong></h1>
        <h1 class="text-center"><strong>Points: @Result.Points / @Result.MaxPoints</strong></h1>

    </div>

    <br />
    <br />

    <div class="card mb-3">
        <div class="card-body">

            @foreach (var answer in CurrentQuestion.Answers)
            {
                <button type="button" @onclick="(() => SelectAnswer(answer))" class="btn btn-primary btn-lg btn-block">@answer.Text</button>
                <br /><br />
            }
        </div>
    </div>

}


@code {
    [Parameter]
    public int QuizId { get; set; }

    public QuizPlayResponse Quiz { get; set; }

    public int currentPage { get; set; }

    public QuestionPlayResponse[] Questions { get; set; }
    public QuestionPlayResponse CurrentQuestion { get; set; }

    public ResultRequest Result = new ResultRequest();

    bool isCorrecr;

    string Username;

    protected override async Task OnInitializedAsync()
    {
        this.Quiz = await this.HttpClient.GetJsonAsync<QuizPlayResponse>($"quizzes/play/{this.QuizId}");
        this.Questions = this.Quiz.Questions.ToArray();
        if (currentPage != this.Questions.Length)
        {
            CurrentQuestion = Questions[currentPage];
        }

        Username = await this.storage.GetItemAsync<string>("userName");

        Result.QuizId = this.QuizId;
        Result.User = Username;
        Result.MaxPoints = this.Quiz.Questions.Sum(q => q.Points);


        currentPage = 0;
    }



    void SelectAnswer(AnswerResponse answer)
    {
        if (currentPage == this.Questions.Length)
        {
            this.Navigation.NavigateTo($"/results/{this.QuizId}");
        }

        if (answer.IsCorrect)
        {
            Result.Points += CurrentQuestion.Points;
        }

        if (currentPage == this.Questions.Length - 1)
        {
            this.HttpClient.PostJsonAsync<ResultRequest>("/results/create", this.Result);
        }

        currentPage++;

        Console.WriteLine(answer.Text);
        Console.WriteLine(answer.IsCorrect);
    }
}
