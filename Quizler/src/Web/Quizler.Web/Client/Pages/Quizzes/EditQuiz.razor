@using Quizler.Web.Shared.Models.Quizzes
@using Quizler.Web.Client.Pages.Questions;
@using Quizler.Web.Shared.Models.Questions
@using Quizler.Web.Shared.Models.Answers

@page "/quizzes/edit/{QuizId:int}/{QuizName}"

@if (quiz == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="card" style="width: 18rem;">
                    <img src="@this.quiz.ImageUrl" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Quiz name: <strong>@this.quiz.Name</strong></h5>
                        <p class="card-text">Category: <strong>@quiz.Category</strong></p>
                        <a href="#" class="btn btn-primary">Edit</a>
                    </div>
                </div>

                <br />

                <CreateQuestion @bind-QuizId="this.QuizId" />
            </div>
            <div class="vl"></div>
            <div class="col">
                @if (this.questions == null)
                {
                    <p><em>Loading...</em></p>
                }
                else
                {
                    <QuestionEdit Questions="@this.questions" />
                }
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int QuizId { get; set; }

    [Parameter]
    public string QuizName { get; set; }

    private QuizEditResponse quiz = new QuizEditResponse();

    private QuestionResponse[] questions;

    protected override async Task OnInitializedAsync()
    {
        quiz = await this.HttpClient.GetJsonAsync<QuizEditResponse>($"quizzes/{QuizId}");
        questions = await this.HttpClient.GetJsonAsync<QuestionResponse[]>($"questions/getall/{QuizId}");
    }
}