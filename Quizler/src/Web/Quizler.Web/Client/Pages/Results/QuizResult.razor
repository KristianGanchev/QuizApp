@page "/results/details/{ResultId:int}"

@using Quizler.Web.Shared.Models.Results
@using Quizler.Web.Shared.Models.Questions
@using Quizler.Web.Shared.Models.Answers

@attribute [Authorize]

@if (Result == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="d-flex justify-content-center">
        <div class="card w-75">
            <div class="card-body">
                <div class="justify-content-center">
                    <button type="button" class="btn btn-warning btn-lg btn-block"> <p><strong>Quiz "@Result.Quiz.Name" completed with @Result.Points of Max @Result.MaxPoints</strong></p></button>
                </div>
                <div class="d-flex justify-content-center">
                    <div class="card w-75">
                        <div class="card-body">
                            @foreach (var question in Questions)
                            {
                                <button type="button" class="btn btn-info btn-lg btn-block">@question.Text</button>

                                <br />

                                foreach (var answer in question.Answers)
                                {
                                    if (answer.IsSelected && answer.IsCorrect)
                                    {
                                        style = "success";
                                    }
                                    else if (answer.IsSelected && answer.IsCorrect == false)
                                    {
                                        style = "danger";
                                    }
                                    else if (answer.IsCorrect)
                                    {
                                        style = "success";
                                    }
                                    else
                                    {
                                        style = "primary";
                                    }

                                    <div class="alert alert-@style" role="alert">
                                        @answer.Text
                                    </div>

                                    <br />
                                }
                                <hr />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public int ResultId { get; set; }

    public List<QuestionsResultDetails> Questions { get; set; }

    AnswerResponse SelectedAnswer = new AnswerResponse();

    string style = String.Empty;

    public ResultDetailsResponse Result { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Result = await this.ResultsService.GetById<ResultDetailsResponse>(this.ResultId, "results/");
        Questions = Result.Quiz.Questions;

        for (int question = 0; question < Questions.Count; question++)
        {
            SelectedAnswer = Result.SelectedAnswers[question].Answer;

            for (int answer = 0; answer < Questions[question].Answers.Count; answer++)
            {
                if (Questions[question].Answers[answer].Text == SelectedAnswer.Text)
                {
                    Questions[question].Answers[answer].IsSelected = true;
                }
            }
        }
    }
}
