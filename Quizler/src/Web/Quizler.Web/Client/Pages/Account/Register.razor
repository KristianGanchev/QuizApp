@page "/register"

@using Quizler.Web.Shared.Models.Account;

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<div class="container justify-content-center">
    <div class="card w-75">
        <div class="card-body">
            <h5 class="card-title">Please enter your details</h5>
            <EditForm Model="model" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="username">Username</label>
                    <InputText Id="username" class="form-control" @bind-Value="model.Username" />
                    <ValidationMessage For="@(() => model.Username)" />
                </div>
                <div class="form-group">
                    <label for="email">Email address</label>
                    <InputText Id="email" class="form-control" @bind-Value="model.Email" />
                    <ValidationMessage For="@(() => model.Email)" />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText Id="password" type="password" class="form-control" @bind-Value="model.Password" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                <div class="form-group">
                    <label for="password">Confirm Password</label>
                    <InputText Id="password" type="password" class="form-control" @bind-Value="model.ConfirmPassword" />
                    <ValidationMessage For="@(() => model.ConfirmPassword)" />
                </div>
                <div class="row">
                    <div class="col">
                        <button type="submit" class="btn btn-success">Register</button>
                        <hr />
                        <p>Allready have an account</p>
                        <a role="button" href="login" class="btn btn-primary">Login</a>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    private RegisterRequestModel model = new RegisterRequestModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    protected override async Task OnInitializedAsync()
    {
        if (await this.UserService.IsLoggedIn())
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(model);

        if (result.Successful)
        {
            this.Navigation.NavigateTo("/login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }
}